### Probar req cualquiera
GET http://localhost:3000/

### CATEGORIAS

### Obtener todas las categorias
GET http://localhost:3000/api/categorias/

### Crear una nueva categoria
POST http://localhost:3000/api/categorias HTTP/1.1
content-type: application/json

{
  "nombre": "Categoria3"
}

### Obtener una unica categoria por id (ej: 1)
GET http://localhost:3000/api/categorias/18

### Obtener categorias por nombre (ej: Cool)
GET http://localhost:3000/api/categorias?nombre=Categoria3

### PROVEEDORES

### Crear un nuevo proveedor

### Obtener todos los proveedores
GET http://localhost:3000/api/proveedores/

POST http://localhost:3000/api/proveedores HTTP/1.1
content-type: application/json

{
  "nombre": "Jose Gimene2z",
  "mail": "josegimene2z@gmail.com"
}

### Obtener un unico proveedor por id (ej: 1)
GET http://localhost:3000/api/proveedores/1

### Obtener proveedores por nombre (ej: Jose)
GET http://localhost:3000/api/proveedores?nombre=Jose

### PRODUCTOS

### Obtener todos los productos
GET http://localhost:3000/api/productos/

### Crear un nuevo producto
POST http://localhost:3000/api/productos HTTP/1.1
content-type: application/json

{
  "nombre": "Queso de cabra",
  "descripcion": "Un rico queso",
  "proveedorId": 3,
  "stockActual": 10,
  "categoriaId": 18
}

### Obtener productos por nombre del producto (ej: Pepsi)
GET http://localhost:3000/api/productos?nombre=Pepsi

### Obtener productos por nombre del proveedor (ej: Jose)
GET http://localhost:3000/api/productos/proveedor/Jose

### Obtener productos por nombre de la categoria (ej: Tremendukis)
GET http://localhost:3000/api/productos/categoria/Tremendukis

### Obtener productos por stock actual (ej: 10)
GET http://localhost:3000/api/productos/stock/10

### Modificar un producto existente (ej: 1)
PUT http://localhost:3000/api/productos/1 HTTP/1.1
content-type: application/json

{
  "nombre": "Coca Cola",
  "descripcion": "Gaseosa!",
  "proveedorId": 1,
  "stockActual": 10,
  "categoriaId": 1
}

### Eliminar un producto existente (ej: 2)
DELETE http://localhost:3000/api/productos/2

### ORDENES

### Obtener todas las ordenes
GET http://localhost:3000/api/ordenes/

### Crear una nueva orden
POST http://localhost:3000/api/ordenes HTTP/1.1
content-type: application/json

{
  "fechaGeneracion": "2021-05-01T00:00:00.000Z",
  "fechaRecepcion": null,
  "esCancelada": false,
  "proveedorId": 1,
  "detalles": [
    {
      "productoId": 1,
      "cantidad": 1,
      "precio": 100
    },
    {
      "productoId": 5,
      "cantidad": 1,
      "precio": 200
    }
  ]
}

### Obtener una unica orden por id (ej: 1)
GET http://localhost:3000/api/ordenes/1

### Obtener ordenes por fechas generacion (ej: fechaInicio=2021-05-01&fechaFin=2021-05-02)
GET http://localhost:3000/api/ordenes/fechaGeneracion?fechaInicio=2021-05-01&fechaFin=2021-05-02

### Obtener ordenes por fechas de recepci√≥n (ej: fechaInicio=2021-05-01&fechaFin=2021-05-02)
GET http://localhost:3000/api/ordenes/fechaRecepcion?fechaInicio=2021-05-01&fechaFin=2021-05-02

### Obtener todos las ordenes de un unico proveedor por id (ej: 1)
GET http://localhost:3000/api/ordenes/proveedor/1

### Modificar una orden existente (ej: 1)
# Por ahora los detalles no se pueden updatear, solo la info de la orden
PUT http://localhost:3000/api/ordenes/1 HTTP/1.1
content-type: application/json

{
  "fechaGeneracion": "2021-05-01T00:00:00.000Z",
  "fechaRecepcion": null,
  "esCancelada": false,
  "proveedorId": 1
}

### Marcar una orden como cancelada (ej: 1)
PATCH http://localhost:3000/api/ordenes/1/estado/cancelada

### Marcar una orden como recibida (ej: 2)
PATCH http://localhost:3000/api/ordenes/2/estado/recibida
